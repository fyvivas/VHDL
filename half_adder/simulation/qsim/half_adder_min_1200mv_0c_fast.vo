// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "02/18/2021 07:48:28"

// 
// Device: Altera EP3C16F484C6 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module half_adder (
	A,
	B,
	Sum,
	Cout);
input 	A;
input 	B;
output 	Sum;
output 	Cout;

// Design Ports Information
// Sum	=>  Location: PIN_L15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cout	=>  Location: PIN_K8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A	=>  Location: PIN_K7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_B1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("half_adder_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \Sum~output_o ;
wire \Cout~output_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \Sum~0_combout ;
wire \Cout~0_combout ;


// Location: IOOBUF_X41_Y17_N2
cycloneiii_io_obuf \Sum~output (
	.i(\Sum~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Sum~output_o ),
	.obar());
// synopsys translate_off
defparam \Sum~output .bus_hold = "false";
defparam \Sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y22_N9
cycloneiii_io_obuf \Cout~output (
	.i(\Cout~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Cout~output_o ),
	.obar());
// synopsys translate_off
defparam \Cout~output .bus_hold = "false";
defparam \Cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y22_N22
cycloneiii_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y27_N15
cycloneiii_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X4_Y13_N24
cycloneiii_lcell_comb \Sum~0 (
// Equation(s):
// \Sum~0_combout  = \A~input_o  $ (\B~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\A~input_o ),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\Sum~0_combout ),
	.cout());
// synopsys translate_off
defparam \Sum~0 .lut_mask = 16'h0FF0;
defparam \Sum~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X4_Y13_N2
cycloneiii_lcell_comb \Cout~0 (
// Equation(s):
// \Cout~0_combout  = (\A~input_o  & \B~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\A~input_o ),
	.datad(\B~input_o ),
	.cin(gnd),
	.combout(\Cout~0_combout ),
	.cout());
// synopsys translate_off
defparam \Cout~0 .lut_mask = 16'hF000;
defparam \Cout~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Sum = \Sum~output_o ;

assign Cout = \Cout~output_o ;

endmodule
